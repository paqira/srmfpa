name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  fmt-clippy:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -std=c11 -frounding-math
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build
      - name: Format
        run: cargo fmt --check
      - name: Lint
        run: cargo +nightly clippy
  C-f32-f64:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -C target-cpu=native
      #      use hardware fma
      CFLAGS: -std=c11 -frounding-math -mfma -march=native
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo +nightly test --release
  softfloat:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -C target-cpu=native
      CFLAGS: -std=c11 -frounding-math -mfma -march=native
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo +nightly test --release -F softfloat -F f16_softfloat -F f128_softfloat
  release-publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ fmt-clippy, C-f32-f64, softfloat ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create '${{ github.ref_name }}' --draft --title 'Release ${{ github.ref_name }}' --notes ""
      - name: Format
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}